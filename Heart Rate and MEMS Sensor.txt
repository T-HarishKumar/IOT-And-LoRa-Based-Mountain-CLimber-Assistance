#include <Wire.h>  // Wire library - used for I2C communication

int ADXL345 = 0x53; // The ADXL345 sensor I2C address

// Heart rate sensor pin (assuming it's connected to A0)
const int heartRatePin = A0;
int heartRateValue = 0;  // Variable to store heart rate

float X_out, Y_out, Z_out;  // Accelerometer outputs

void setup() {
  Serial.begin(9600); // Initiate serial communication for printing the results on the Serial monitor
  Wire.begin(); // Initiate the Wire library
  
  // Set ADXL345 in measuring mode
  Wire.beginTransmission(ADXL345); // Start communicating with the device 
  Wire.write(0x2D); // Access/ talk to POWER_CTL Register - 0x2D
  // Enable measurement
  Wire.write(8); // (8dec -> 0000 1000 binary) Bit D3 High for measuring enable 
  Wire.endTransmission();
  delay(10);
  
  pinMode(heartRatePin, INPUT);  // Set the heart rate sensor pin as input
}

void loop() {
  // === Read accelerometer data === //
  Wire.beginTransmission(ADXL345);
  Wire.write(0x32); // Start with register 0x32 (ACCEL_XOUT_H)
  Wire.endTransmission(false);
  Wire.requestFrom(ADXL345, 6, true); // Read 6 registers total, each axis value is stored in 2 registers
  X_out = ( Wire.read() | Wire.read() << 8); // X-axis value
  X_out = X_out / 256; // For a range of +-2g, we need to divide the raw values by 256, according to the datasheet
  Y_out = ( Wire.read() | Wire.read() << 8); // Y-axis value
  Y_out = Y_out / 256;
  Z_out = ( Wire.read() | Wire.read() << 8); // Z-axis value   
  Z_out = Z_out / 256;

  // === Read heart rate data === //
  heartRateValue = analogRead(heartRatePin);  // Read heart rate sensor value (analog input)
  
  // Map the heart rate sensor value (if needed) to an appropriate range
  // For example, you may need to map it to a range of 0-255 depending on your sensor's output
  // heartRateValue = map(heartRateValue, 0, 1023, 0, 255);
  
  Serial.print("Xa= ");
  Serial.print(X_out);
  Serial.print("   Ya= ");
  Serial.print(Y_out);
  Serial.print("   Za= ");
  Serial.print(Z_out);
  Serial.print("   Heart Rate= ");
  Serial.println(heartRateValue);

  // Fall detection logic based on accelerometer data
  if (X_out > -0.8 && X_out < 0.8) {  // Adjust these values as needed for fall detection
    Serial.println("No fall detected!");
  } else {
    Serial.println("Accident or fall detected.");
  }

  delay(200);
}